{
  "hooks": [
    {
      "name": "on-long-response",
      "description": "Auto-dump reasoning when response exceeds token budget",
      "trigger": {
        "type": "response_tokens",
        "threshold": 1800
      },
      "actions": [
        {
          "type": "file_append",
          "path": "DOCS/TASKLOG.md",
          "content_template": "\n## [${ISO_TIMESTAMP}] Auto-Summary: Long Response\n\n${AUTO_SUMMARY}\n\n**Context**: ${CONVERSATION_TOPIC}\n**Tokens**: ${RESPONSE_TOKENS}\n\n---\n"
        },
        {
          "type": "github_issue_create",
          "title": "[Summary] ${CONVERSATION_TOPIC} - ${DATE}",
          "labels": ["summary", "meta"],
          "body_template": "## Context Overflow Summary\n\n**Timestamp**: ${ISO_TIMESTAMP}\n**Tokens**: ${RESPONSE_TOKENS}\n\n### What Was Discussed\n${AUTO_SUMMARY}\n\n### Next Steps\n${NEXT_ACTIONS}\n\n---\n_Auto-generated by on-long-response hook_"
        }
      ]
    },
    {
      "name": "on-large-diff",
      "description": "Block PRs with >150 lines changed, force split",
      "trigger": {
        "type": "diff_lines",
        "threshold": 150
      },
      "actions": [
        {
          "type": "github_issue_create",
          "title": "[Refactor Required] Diff too large - ${ISSUE_TOPIC}",
          "labels": ["refactor", "cleanup", "P2-medium"],
          "body_template": "## Problem\nProposed change exceeds 150 line safe limit.\n\n**Diff Size**: ${DIFF_LINES} lines\n**Files Affected**: ${FILES_COUNT}\n\n## Split Plan\n${AUTO_SPLIT_PLAN}\n\n## Original Scope\n${ORIGINAL_GOAL}\n\n---\n_Auto-generated by on-large-diff hook_"
        },
        {
          "type": "warn",
          "message": "‚ö†Ô∏è Diff exceeds 150 lines. Created issue to split into smaller PRs. Review the split plan and proceed with Part 1."
        }
      ]
    },
    {
      "name": "on-missing-tests",
      "description": "Auto-scaffold tests when core game files modified",
      "trigger": {
        "type": "file_write",
        "pattern": "^js/(battle|game|player|train)\\.js$",
        "condition": "test_file_missing"
      },
      "actions": [
        {
          "type": "file_create",
          "path_template": "tests/${FILE_BASENAME}.test.js",
          "content_template": "/**\n * Tests for ${FILE_PATH}\n * Auto-scaffolded by on-missing-tests hook\n * TODO: Add comprehensive test cases\n */\n\ndescribe('${FILE_BASENAME}', () => {\n  test('should exist', () => {\n    expect(true).toBe(true);\n  });\n\n  // TODO: Add tests for:\n  // - Happy path\n  // - Edge cases\n  // - Error handling\n  // - Save/load compatibility\n});\n"
        },
        {
          "type": "github_issue_create",
          "title": "[Tests] Add tests for ${FILE_BASENAME}.js",
          "labels": ["test", "P2-medium"],
          "body_template": "## Context\nModified `${FILE_PATH}` but no tests exist.\n\n## TODO\n- [ ] Write unit tests for core functions\n- [ ] Test edge cases\n- [ ] Test error handling\n- [ ] Verify save/load compatibility\n- [ ] Test mobile touch interactions (if UI)\n\n## Test Scaffold\nCreated `tests/${FILE_BASENAME}.test.js` - fill it in.\n\n---\n_Auto-generated by on-missing-tests hook_"
        }
      ]
    },
    {
      "name": "on-build-fail",
      "description": "Auto-create bug issue when CI fails",
      "trigger": {
        "type": "ci_status",
        "status": "failure"
      },
      "actions": [
        {
          "type": "github_issue_create",
          "title": "[Bug] Build Failed: ${FAILED_JOB_NAME}",
          "labels": ["bug", "ci", "P1-high"],
          "body_template": "## Build Failure\n\n**Job**: ${FAILED_JOB_NAME}\n**Commit**: ${COMMIT_SHA}\n**Branch**: ${BRANCH_NAME}\n\n## Reproduction\n```bash\n${FAILED_COMMAND}\n```\n\n## Error Log\n```\n${ERROR_LOG_SNIPPET}\n```\n\n## Acceptance Criteria\n- [ ] Fix the failing test/lint/build\n- [ ] Add regression test to prevent recurrence\n- [ ] Verify mobile build works (if relevant)\n- [ ] CI green on all platforms\n\n---\n_Auto-generated by on-build-fail hook_"
        }
      ]
    },
    {
      "name": "on-context-overflow",
      "description": "Emergency dump when total context exceeds 8k tokens",
      "trigger": {
        "type": "total_tokens",
        "threshold": 8000
      },
      "actions": [
        {
          "type": "file_append",
          "path": "DOCS/TASKLOG.md",
          "content_template": "\n## [${ISO_TIMESTAMP}] ‚ö†Ô∏è EMERGENCY CONTEXT DUMP\n\n**Total Tokens**: ${TOTAL_TOKENS} (exceeded 8k limit)\n**Topic**: ${CONVERSATION_TOPIC}\n\n### Summary\n${FULL_CONTEXT_SUMMARY}\n\n### Files Referenced\n${FILE_LIST}\n\n### Open Questions\n${OPEN_QUESTIONS}\n\n### Recommended Next Steps\n1. ${NEXT_STEP_1}\n2. ${NEXT_STEP_2}\n3. ${NEXT_STEP_3}\n\n---\n**Action**: Close this chat, start fresh with Enforcer PM, reference this dump.\n\n---\n"
        },
        {
          "type": "github_issue_create",
          "title": "[Context Overflow] ${CONVERSATION_TOPIC}",
          "labels": ["summary", "meta", "P2-medium"],
          "body_template": "## Context Exceeded 8k Tokens\n\n**Timestamp**: ${ISO_TIMESTAMP}\n**Tokens**: ${TOTAL_TOKENS}\n\n### What Was Discussed\n${FULL_CONTEXT_SUMMARY}\n\n### Files Involved\n${FILE_LIST}\n\n### To Continue\n1. Read `DOCS/TASKLOG.md` entry for ${ISO_TIMESTAMP}\n2. Start fresh session with Enforcer PM\n3. Reference this issue for context\n\n---\n_Auto-generated by on-context-overflow hook_"
        },
        {
          "type": "halt",
          "message": "üö® Context overflow at ${TOTAL_TOKENS} tokens. Dumped to TASKLOG.md and created issue. Please start a fresh session."
        }
      ]
    }
  ],
  "settings": {
    "enable_all": true,
    "auto_summary_max_tokens": 200,
    "issue_auto_assign": false,
    "warn_before_halt": true
  }
}
